//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.01.13 at 02:35:24 PM MST 
//


package com.viasat.wildblue.common.commondata;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import com.viasat.wildblue.common.location.Address;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CustomerSearchCriteria complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CustomerSearchCriteria">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="searchType">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="Default"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;group ref="{http://www.wildblue.viasat.com/XMLSchema/v3.0/CommonData}CustomerSearchGroup"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CustomerSearchCriteria", propOrder = {
    "searchType",
    "phoneNumber",
    "accountNumber",
    "macAddress",
    "contactPerson",
    "emailAddress",
    "ticketNumber",
    "siteAddress",
    "serialNumber",
    "ipAddress"
})
public class CustomerSearchCriteria
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String searchType;
    protected String phoneNumber;
    protected String accountNumber;
    protected String macAddress;
    protected Person contactPerson;
    protected String emailAddress;
    protected Long ticketNumber;
    protected Address siteAddress;
    protected String serialNumber;
    protected String ipAddress;

    /**
     * Gets the value of the searchType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSearchType() {
        return searchType;
    }

    /**
     * Sets the value of the searchType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSearchType(String value) {
        this.searchType = value;
    }

    /**
     * Gets the value of the phoneNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Sets the value of the phoneNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPhoneNumber(String value) {
        this.phoneNumber = value;
    }

    /**
     * Gets the value of the accountNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Sets the value of the accountNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccountNumber(String value) {
        this.accountNumber = value;
    }

    /**
     * Gets the value of the macAddress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMacAddress() {
        return macAddress;
    }

    /**
     * Sets the value of the macAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMacAddress(String value) {
        this.macAddress = value;
    }

    /**
     * Gets the value of the contactPerson property.
     * 
     * @return
     *     possible object is
     *     {@link Person }
     *     
     */
    public Person getContactPerson() {
        return contactPerson;
    }

    /**
     * Sets the value of the contactPerson property.
     * 
     * @param value
     *     allowed object is
     *     {@link Person }
     *     
     */
    public void setContactPerson(Person value) {
        this.contactPerson = value;
    }

    /**
     * Gets the value of the emailAddress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Sets the value of the emailAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmailAddress(String value) {
        this.emailAddress = value;
    }

    /**
     * Gets the value of the ticketNumber property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getTicketNumber() {
        return ticketNumber;
    }

    /**
     * Sets the value of the ticketNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setTicketNumber(Long value) {
        this.ticketNumber = value;
    }

    /**
     * Gets the value of the siteAddress property.
     * 
     * @return
     *     possible object is
     *     {@link Address }
     *     
     */
    public Address getSiteAddress() {
        return siteAddress;
    }

    /**
     * Sets the value of the siteAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link Address }
     *     
     */
    public void setSiteAddress(Address value) {
        this.siteAddress = value;
    }

    /**
     * Gets the value of the serialNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSerialNumber() {
        return serialNumber;
    }

    /**
     * Sets the value of the serialNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSerialNumber(String value) {
        this.serialNumber = value;
    }

    /**
     * Gets the value of the ipAddress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIpAddress() {
        return ipAddress;
    }

    /**
     * Sets the value of the ipAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIpAddress(String value) {
        this.ipAddress = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theSearchType;
            theSearchType = this.getSearchType();
            strategy.appendField(locator, this, "searchType", buffer, theSearchType);
        }
        {
            String thePhoneNumber;
            thePhoneNumber = this.getPhoneNumber();
            strategy.appendField(locator, this, "phoneNumber", buffer, thePhoneNumber);
        }
        {
            String theAccountNumber;
            theAccountNumber = this.getAccountNumber();
            strategy.appendField(locator, this, "accountNumber", buffer, theAccountNumber);
        }
        {
            String theMacAddress;
            theMacAddress = this.getMacAddress();
            strategy.appendField(locator, this, "macAddress", buffer, theMacAddress);
        }
        {
            Person theContactPerson;
            theContactPerson = this.getContactPerson();
            strategy.appendField(locator, this, "contactPerson", buffer, theContactPerson);
        }
        {
            String theEmailAddress;
            theEmailAddress = this.getEmailAddress();
            strategy.appendField(locator, this, "emailAddress", buffer, theEmailAddress);
        }
        {
            Long theTicketNumber;
            theTicketNumber = this.getTicketNumber();
            strategy.appendField(locator, this, "ticketNumber", buffer, theTicketNumber);
        }
        {
            Address theSiteAddress;
            theSiteAddress = this.getSiteAddress();
            strategy.appendField(locator, this, "siteAddress", buffer, theSiteAddress);
        }
        {
            String theSerialNumber;
            theSerialNumber = this.getSerialNumber();
            strategy.appendField(locator, this, "serialNumber", buffer, theSerialNumber);
        }
        {
            String theIpAddress;
            theIpAddress = this.getIpAddress();
            strategy.appendField(locator, this, "ipAddress", buffer, theIpAddress);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CustomerSearchCriteria)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CustomerSearchCriteria that = ((CustomerSearchCriteria) object);
        {
            String lhsSearchType;
            lhsSearchType = this.getSearchType();
            String rhsSearchType;
            rhsSearchType = that.getSearchType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchType", lhsSearchType), LocatorUtils.property(thatLocator, "searchType", rhsSearchType), lhsSearchType, rhsSearchType)) {
                return false;
            }
        }
        {
            String lhsPhoneNumber;
            lhsPhoneNumber = this.getPhoneNumber();
            String rhsPhoneNumber;
            rhsPhoneNumber = that.getPhoneNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneNumber", lhsPhoneNumber), LocatorUtils.property(thatLocator, "phoneNumber", rhsPhoneNumber), lhsPhoneNumber, rhsPhoneNumber)) {
                return false;
            }
        }
        {
            String lhsAccountNumber;
            lhsAccountNumber = this.getAccountNumber();
            String rhsAccountNumber;
            rhsAccountNumber = that.getAccountNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountNumber", lhsAccountNumber), LocatorUtils.property(thatLocator, "accountNumber", rhsAccountNumber), lhsAccountNumber, rhsAccountNumber)) {
                return false;
            }
        }
        {
            String lhsMacAddress;
            lhsMacAddress = this.getMacAddress();
            String rhsMacAddress;
            rhsMacAddress = that.getMacAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "macAddress", lhsMacAddress), LocatorUtils.property(thatLocator, "macAddress", rhsMacAddress), lhsMacAddress, rhsMacAddress)) {
                return false;
            }
        }
        {
            Person lhsContactPerson;
            lhsContactPerson = this.getContactPerson();
            Person rhsContactPerson;
            rhsContactPerson = that.getContactPerson();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactPerson", lhsContactPerson), LocatorUtils.property(thatLocator, "contactPerson", rhsContactPerson), lhsContactPerson, rhsContactPerson)) {
                return false;
            }
        }
        {
            String lhsEmailAddress;
            lhsEmailAddress = this.getEmailAddress();
            String rhsEmailAddress;
            rhsEmailAddress = that.getEmailAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emailAddress", lhsEmailAddress), LocatorUtils.property(thatLocator, "emailAddress", rhsEmailAddress), lhsEmailAddress, rhsEmailAddress)) {
                return false;
            }
        }
        {
            Long lhsTicketNumber;
            lhsTicketNumber = this.getTicketNumber();
            Long rhsTicketNumber;
            rhsTicketNumber = that.getTicketNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ticketNumber", lhsTicketNumber), LocatorUtils.property(thatLocator, "ticketNumber", rhsTicketNumber), lhsTicketNumber, rhsTicketNumber)) {
                return false;
            }
        }
        {
            Address lhsSiteAddress;
            lhsSiteAddress = this.getSiteAddress();
            Address rhsSiteAddress;
            rhsSiteAddress = that.getSiteAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siteAddress", lhsSiteAddress), LocatorUtils.property(thatLocator, "siteAddress", rhsSiteAddress), lhsSiteAddress, rhsSiteAddress)) {
                return false;
            }
        }
        {
            String lhsSerialNumber;
            lhsSerialNumber = this.getSerialNumber();
            String rhsSerialNumber;
            rhsSerialNumber = that.getSerialNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "serialNumber", lhsSerialNumber), LocatorUtils.property(thatLocator, "serialNumber", rhsSerialNumber), lhsSerialNumber, rhsSerialNumber)) {
                return false;
            }
        }
        {
            String lhsIpAddress;
            lhsIpAddress = this.getIpAddress();
            String rhsIpAddress;
            rhsIpAddress = that.getIpAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ipAddress", lhsIpAddress), LocatorUtils.property(thatLocator, "ipAddress", rhsIpAddress), lhsIpAddress, rhsIpAddress)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theSearchType;
            theSearchType = this.getSearchType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchType", theSearchType), currentHashCode, theSearchType);
        }
        {
            String thePhoneNumber;
            thePhoneNumber = this.getPhoneNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneNumber", thePhoneNumber), currentHashCode, thePhoneNumber);
        }
        {
            String theAccountNumber;
            theAccountNumber = this.getAccountNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountNumber", theAccountNumber), currentHashCode, theAccountNumber);
        }
        {
            String theMacAddress;
            theMacAddress = this.getMacAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "macAddress", theMacAddress), currentHashCode, theMacAddress);
        }
        {
            Person theContactPerson;
            theContactPerson = this.getContactPerson();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactPerson", theContactPerson), currentHashCode, theContactPerson);
        }
        {
            String theEmailAddress;
            theEmailAddress = this.getEmailAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailAddress", theEmailAddress), currentHashCode, theEmailAddress);
        }
        {
            Long theTicketNumber;
            theTicketNumber = this.getTicketNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ticketNumber", theTicketNumber), currentHashCode, theTicketNumber);
        }
        {
            Address theSiteAddress;
            theSiteAddress = this.getSiteAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siteAddress", theSiteAddress), currentHashCode, theSiteAddress);
        }
        {
            String theSerialNumber;
            theSerialNumber = this.getSerialNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "serialNumber", theSerialNumber), currentHashCode, theSerialNumber);
        }
        {
            String theIpAddress;
            theIpAddress = this.getIpAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ipAddress", theIpAddress), currentHashCode, theIpAddress);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof CustomerSearchCriteria) {
            final CustomerSearchCriteria copy = ((CustomerSearchCriteria) draftCopy);
            if (this.searchType!= null) {
                String sourceSearchType;
                sourceSearchType = this.getSearchType();
                String copySearchType = ((String) strategy.copy(LocatorUtils.property(locator, "searchType", sourceSearchType), sourceSearchType));
                copy.setSearchType(copySearchType);
            } else {
                copy.searchType = null;
            }
            if (this.phoneNumber!= null) {
                String sourcePhoneNumber;
                sourcePhoneNumber = this.getPhoneNumber();
                String copyPhoneNumber = ((String) strategy.copy(LocatorUtils.property(locator, "phoneNumber", sourcePhoneNumber), sourcePhoneNumber));
                copy.setPhoneNumber(copyPhoneNumber);
            } else {
                copy.phoneNumber = null;
            }
            if (this.accountNumber!= null) {
                String sourceAccountNumber;
                sourceAccountNumber = this.getAccountNumber();
                String copyAccountNumber = ((String) strategy.copy(LocatorUtils.property(locator, "accountNumber", sourceAccountNumber), sourceAccountNumber));
                copy.setAccountNumber(copyAccountNumber);
            } else {
                copy.accountNumber = null;
            }
            if (this.macAddress!= null) {
                String sourceMacAddress;
                sourceMacAddress = this.getMacAddress();
                String copyMacAddress = ((String) strategy.copy(LocatorUtils.property(locator, "macAddress", sourceMacAddress), sourceMacAddress));
                copy.setMacAddress(copyMacAddress);
            } else {
                copy.macAddress = null;
            }
            if (this.contactPerson!= null) {
                Person sourceContactPerson;
                sourceContactPerson = this.getContactPerson();
                Person copyContactPerson = ((Person) strategy.copy(LocatorUtils.property(locator, "contactPerson", sourceContactPerson), sourceContactPerson));
                copy.setContactPerson(copyContactPerson);
            } else {
                copy.contactPerson = null;
            }
            if (this.emailAddress!= null) {
                String sourceEmailAddress;
                sourceEmailAddress = this.getEmailAddress();
                String copyEmailAddress = ((String) strategy.copy(LocatorUtils.property(locator, "emailAddress", sourceEmailAddress), sourceEmailAddress));
                copy.setEmailAddress(copyEmailAddress);
            } else {
                copy.emailAddress = null;
            }
            if (this.ticketNumber!= null) {
                Long sourceTicketNumber;
                sourceTicketNumber = this.getTicketNumber();
                Long copyTicketNumber = ((Long) strategy.copy(LocatorUtils.property(locator, "ticketNumber", sourceTicketNumber), sourceTicketNumber));
                copy.setTicketNumber(copyTicketNumber);
            } else {
                copy.ticketNumber = null;
            }
            if (this.siteAddress!= null) {
                Address sourceSiteAddress;
                sourceSiteAddress = this.getSiteAddress();
                Address copySiteAddress = ((Address) strategy.copy(LocatorUtils.property(locator, "siteAddress", sourceSiteAddress), sourceSiteAddress));
                copy.setSiteAddress(copySiteAddress);
            } else {
                copy.siteAddress = null;
            }
            if (this.serialNumber!= null) {
                String sourceSerialNumber;
                sourceSerialNumber = this.getSerialNumber();
                String copySerialNumber = ((String) strategy.copy(LocatorUtils.property(locator, "serialNumber", sourceSerialNumber), sourceSerialNumber));
                copy.setSerialNumber(copySerialNumber);
            } else {
                copy.serialNumber = null;
            }
            if (this.ipAddress!= null) {
                String sourceIpAddress;
                sourceIpAddress = this.getIpAddress();
                String copyIpAddress = ((String) strategy.copy(LocatorUtils.property(locator, "ipAddress", sourceIpAddress), sourceIpAddress));
                copy.setIpAddress(copyIpAddress);
            } else {
                copy.ipAddress = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CustomerSearchCriteria();
    }

}
