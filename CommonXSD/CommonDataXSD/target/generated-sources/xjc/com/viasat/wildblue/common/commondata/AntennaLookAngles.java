//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.12.25 at 01:06:37 PM MST 
//


package com.viasat.wildblue.common.commondata;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for AntennaLookAngles complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AntennaLookAngles">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="azimuth" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="elevation" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="skew" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="boomArmAngle" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AntennaLookAngles", propOrder = {
    "azimuth",
    "elevation",
    "skew",
    "boomArmAngle"
})
public class AntennaLookAngles
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected double azimuth;
    protected double elevation;
    protected double skew;
    protected double boomArmAngle;

    /**
     * Gets the value of the azimuth property.
     * 
     */
    public double getAzimuth() {
        return azimuth;
    }

    /**
     * Sets the value of the azimuth property.
     * 
     */
    public void setAzimuth(double value) {
        this.azimuth = value;
    }

    /**
     * Gets the value of the elevation property.
     * 
     */
    public double getElevation() {
        return elevation;
    }

    /**
     * Sets the value of the elevation property.
     * 
     */
    public void setElevation(double value) {
        this.elevation = value;
    }

    /**
     * Gets the value of the skew property.
     * 
     */
    public double getSkew() {
        return skew;
    }

    /**
     * Sets the value of the skew property.
     * 
     */
    public void setSkew(double value) {
        this.skew = value;
    }

    /**
     * Gets the value of the boomArmAngle property.
     * 
     */
    public double getBoomArmAngle() {
        return boomArmAngle;
    }

    /**
     * Sets the value of the boomArmAngle property.
     * 
     */
    public void setBoomArmAngle(double value) {
        this.boomArmAngle = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            double theAzimuth;
            theAzimuth = this.getAzimuth();
            strategy.appendField(locator, this, "azimuth", buffer, theAzimuth);
        }
        {
            double theElevation;
            theElevation = this.getElevation();
            strategy.appendField(locator, this, "elevation", buffer, theElevation);
        }
        {
            double theSkew;
            theSkew = this.getSkew();
            strategy.appendField(locator, this, "skew", buffer, theSkew);
        }
        {
            double theBoomArmAngle;
            theBoomArmAngle = this.getBoomArmAngle();
            strategy.appendField(locator, this, "boomArmAngle", buffer, theBoomArmAngle);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AntennaLookAngles)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AntennaLookAngles that = ((AntennaLookAngles) object);
        {
            double lhsAzimuth;
            lhsAzimuth = this.getAzimuth();
            double rhsAzimuth;
            rhsAzimuth = that.getAzimuth();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "azimuth", lhsAzimuth), LocatorUtils.property(thatLocator, "azimuth", rhsAzimuth), lhsAzimuth, rhsAzimuth)) {
                return false;
            }
        }
        {
            double lhsElevation;
            lhsElevation = this.getElevation();
            double rhsElevation;
            rhsElevation = that.getElevation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "elevation", lhsElevation), LocatorUtils.property(thatLocator, "elevation", rhsElevation), lhsElevation, rhsElevation)) {
                return false;
            }
        }
        {
            double lhsSkew;
            lhsSkew = this.getSkew();
            double rhsSkew;
            rhsSkew = that.getSkew();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "skew", lhsSkew), LocatorUtils.property(thatLocator, "skew", rhsSkew), lhsSkew, rhsSkew)) {
                return false;
            }
        }
        {
            double lhsBoomArmAngle;
            lhsBoomArmAngle = this.getBoomArmAngle();
            double rhsBoomArmAngle;
            rhsBoomArmAngle = that.getBoomArmAngle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boomArmAngle", lhsBoomArmAngle), LocatorUtils.property(thatLocator, "boomArmAngle", rhsBoomArmAngle), lhsBoomArmAngle, rhsBoomArmAngle)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            double theAzimuth;
            theAzimuth = this.getAzimuth();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "azimuth", theAzimuth), currentHashCode, theAzimuth);
        }
        {
            double theElevation;
            theElevation = this.getElevation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "elevation", theElevation), currentHashCode, theElevation);
        }
        {
            double theSkew;
            theSkew = this.getSkew();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "skew", theSkew), currentHashCode, theSkew);
        }
        {
            double theBoomArmAngle;
            theBoomArmAngle = this.getBoomArmAngle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boomArmAngle", theBoomArmAngle), currentHashCode, theBoomArmAngle);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof AntennaLookAngles) {
            final AntennaLookAngles copy = ((AntennaLookAngles) draftCopy);
            double sourceAzimuth;
            sourceAzimuth = this.getAzimuth();
            double copyAzimuth = strategy.copy(LocatorUtils.property(locator, "azimuth", sourceAzimuth), sourceAzimuth);
            copy.setAzimuth(copyAzimuth);
            double sourceElevation;
            sourceElevation = this.getElevation();
            double copyElevation = strategy.copy(LocatorUtils.property(locator, "elevation", sourceElevation), sourceElevation);
            copy.setElevation(copyElevation);
            double sourceSkew;
            sourceSkew = this.getSkew();
            double copySkew = strategy.copy(LocatorUtils.property(locator, "skew", sourceSkew), sourceSkew);
            copy.setSkew(copySkew);
            double sourceBoomArmAngle;
            sourceBoomArmAngle = this.getBoomArmAngle();
            double copyBoomArmAngle = strategy.copy(LocatorUtils.property(locator, "boomArmAngle", sourceBoomArmAngle), sourceBoomArmAngle);
            copy.setBoomArmAngle(copyBoomArmAngle);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new AntennaLookAngles();
    }

}
