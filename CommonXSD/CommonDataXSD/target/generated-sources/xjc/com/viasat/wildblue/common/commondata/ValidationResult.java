//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.12.25 at 01:06:37 PM MST 
//


package com.viasat.wildblue.common.commondata;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ValidationResult complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ValidationResult">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="validationError" type="{http://www.wildblue.viasat.com/XMLSchema/v3.0/CommonData}ValidationError" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="validationWarning" type="{http://www.wildblue.viasat.com/XMLSchema/v3.0/CommonData}ValidationError" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValidationResult", propOrder = {
    "validationError",
    "validationWarning"
})
public class ValidationResult
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected List<ValidationError> validationError;
    protected List<ValidationError> validationWarning;

    /**
     * Gets the value of the validationError property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the validationError property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getValidationError().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ValidationError }
     * 
     * 
     */
    public List<ValidationError> getValidationError() {
        if (validationError == null) {
            validationError = new ArrayList<ValidationError>();
        }
        return this.validationError;
    }

    /**
     * Gets the value of the validationWarning property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the validationWarning property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getValidationWarning().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ValidationError }
     * 
     * 
     */
    public List<ValidationError> getValidationWarning() {
        if (validationWarning == null) {
            validationWarning = new ArrayList<ValidationError>();
        }
        return this.validationWarning;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<ValidationError> theValidationError;
            theValidationError = this.getValidationError();
            strategy.appendField(locator, this, "validationError", buffer, theValidationError);
        }
        {
            List<ValidationError> theValidationWarning;
            theValidationWarning = this.getValidationWarning();
            strategy.appendField(locator, this, "validationWarning", buffer, theValidationWarning);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ValidationResult)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ValidationResult that = ((ValidationResult) object);
        {
            List<ValidationError> lhsValidationError;
            lhsValidationError = this.getValidationError();
            List<ValidationError> rhsValidationError;
            rhsValidationError = that.getValidationError();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "validationError", lhsValidationError), LocatorUtils.property(thatLocator, "validationError", rhsValidationError), lhsValidationError, rhsValidationError)) {
                return false;
            }
        }
        {
            List<ValidationError> lhsValidationWarning;
            lhsValidationWarning = this.getValidationWarning();
            List<ValidationError> rhsValidationWarning;
            rhsValidationWarning = that.getValidationWarning();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "validationWarning", lhsValidationWarning), LocatorUtils.property(thatLocator, "validationWarning", rhsValidationWarning), lhsValidationWarning, rhsValidationWarning)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<ValidationError> theValidationError;
            theValidationError = this.getValidationError();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "validationError", theValidationError), currentHashCode, theValidationError);
        }
        {
            List<ValidationError> theValidationWarning;
            theValidationWarning = this.getValidationWarning();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "validationWarning", theValidationWarning), currentHashCode, theValidationWarning);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof ValidationResult) {
            final ValidationResult copy = ((ValidationResult) draftCopy);
            if ((this.validationError!= null)&&(!this.validationError.isEmpty())) {
                List<ValidationError> sourceValidationError;
                sourceValidationError = this.getValidationError();
                @SuppressWarnings("unchecked")
                List<ValidationError> copyValidationError = ((List<ValidationError> ) strategy.copy(LocatorUtils.property(locator, "validationError", sourceValidationError), sourceValidationError));
                copy.validationError = null;
                List<ValidationError> uniqueValidationErrorl = copy.getValidationError();
                uniqueValidationErrorl.addAll(copyValidationError);
            } else {
                copy.validationError = null;
            }
            if ((this.validationWarning!= null)&&(!this.validationWarning.isEmpty())) {
                List<ValidationError> sourceValidationWarning;
                sourceValidationWarning = this.getValidationWarning();
                @SuppressWarnings("unchecked")
                List<ValidationError> copyValidationWarning = ((List<ValidationError> ) strategy.copy(LocatorUtils.property(locator, "validationWarning", sourceValidationWarning), sourceValidationWarning));
                copy.validationWarning = null;
                List<ValidationError> uniqueValidationWarningl = copy.getValidationWarning();
                uniqueValidationWarningl.addAll(copyValidationWarning);
            } else {
                copy.validationWarning = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new ValidationResult();
    }

}
