//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.01.13 at 02:31:53 PM MST 
//


package com.viasat.wildblue.common.commondata;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ContactBase complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ContactBase">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="emailAddress" type="{http://www.wildblue.viasat.com/XMLSchema/v3.0/CommonData}EmailAddress"/>
 *         &lt;element name="primaryPhone" type="{http://www.wildblue.viasat.com/XMLSchema/v3.0/CommonData}PhoneNumber"/>
 *         &lt;element name="secondaryPhone" type="{http://www.wildblue.viasat.com/XMLSchema/v3.0/CommonData}PhoneNumber" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ContactBase", propOrder = {
    "emailAddress",
    "primaryPhone",
    "secondaryPhone"
})
@XmlSeeAlso({
    ContactInfo.class
})
public class ContactBase
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true, nillable = true)
    protected String emailAddress;
    @XmlElement(required = true, nillable = true)
    protected String primaryPhone;
    @XmlElement(nillable = true)
    protected String secondaryPhone;

    /**
     * Gets the value of the emailAddress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Sets the value of the emailAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmailAddress(String value) {
        this.emailAddress = value;
    }

    /**
     * Gets the value of the primaryPhone property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrimaryPhone() {
        return primaryPhone;
    }

    /**
     * Sets the value of the primaryPhone property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrimaryPhone(String value) {
        this.primaryPhone = value;
    }

    /**
     * Gets the value of the secondaryPhone property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSecondaryPhone() {
        return secondaryPhone;
    }

    /**
     * Sets the value of the secondaryPhone property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSecondaryPhone(String value) {
        this.secondaryPhone = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theEmailAddress;
            theEmailAddress = this.getEmailAddress();
            strategy.appendField(locator, this, "emailAddress", buffer, theEmailAddress);
        }
        {
            String thePrimaryPhone;
            thePrimaryPhone = this.getPrimaryPhone();
            strategy.appendField(locator, this, "primaryPhone", buffer, thePrimaryPhone);
        }
        {
            String theSecondaryPhone;
            theSecondaryPhone = this.getSecondaryPhone();
            strategy.appendField(locator, this, "secondaryPhone", buffer, theSecondaryPhone);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ContactBase)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ContactBase that = ((ContactBase) object);
        {
            String lhsEmailAddress;
            lhsEmailAddress = this.getEmailAddress();
            String rhsEmailAddress;
            rhsEmailAddress = that.getEmailAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emailAddress", lhsEmailAddress), LocatorUtils.property(thatLocator, "emailAddress", rhsEmailAddress), lhsEmailAddress, rhsEmailAddress)) {
                return false;
            }
        }
        {
            String lhsPrimaryPhone;
            lhsPrimaryPhone = this.getPrimaryPhone();
            String rhsPrimaryPhone;
            rhsPrimaryPhone = that.getPrimaryPhone();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "primaryPhone", lhsPrimaryPhone), LocatorUtils.property(thatLocator, "primaryPhone", rhsPrimaryPhone), lhsPrimaryPhone, rhsPrimaryPhone)) {
                return false;
            }
        }
        {
            String lhsSecondaryPhone;
            lhsSecondaryPhone = this.getSecondaryPhone();
            String rhsSecondaryPhone;
            rhsSecondaryPhone = that.getSecondaryPhone();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "secondaryPhone", lhsSecondaryPhone), LocatorUtils.property(thatLocator, "secondaryPhone", rhsSecondaryPhone), lhsSecondaryPhone, rhsSecondaryPhone)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theEmailAddress;
            theEmailAddress = this.getEmailAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailAddress", theEmailAddress), currentHashCode, theEmailAddress);
        }
        {
            String thePrimaryPhone;
            thePrimaryPhone = this.getPrimaryPhone();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "primaryPhone", thePrimaryPhone), currentHashCode, thePrimaryPhone);
        }
        {
            String theSecondaryPhone;
            theSecondaryPhone = this.getSecondaryPhone();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "secondaryPhone", theSecondaryPhone), currentHashCode, theSecondaryPhone);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof ContactBase) {
            final ContactBase copy = ((ContactBase) draftCopy);
            if (this.emailAddress!= null) {
                String sourceEmailAddress;
                sourceEmailAddress = this.getEmailAddress();
                String copyEmailAddress = ((String) strategy.copy(LocatorUtils.property(locator, "emailAddress", sourceEmailAddress), sourceEmailAddress));
                copy.setEmailAddress(copyEmailAddress);
            } else {
                copy.emailAddress = null;
            }
            if (this.primaryPhone!= null) {
                String sourcePrimaryPhone;
                sourcePrimaryPhone = this.getPrimaryPhone();
                String copyPrimaryPhone = ((String) strategy.copy(LocatorUtils.property(locator, "primaryPhone", sourcePrimaryPhone), sourcePrimaryPhone));
                copy.setPrimaryPhone(copyPrimaryPhone);
            } else {
                copy.primaryPhone = null;
            }
            if (this.secondaryPhone!= null) {
                String sourceSecondaryPhone;
                sourceSecondaryPhone = this.getSecondaryPhone();
                String copySecondaryPhone = ((String) strategy.copy(LocatorUtils.property(locator, "secondaryPhone", sourceSecondaryPhone), sourceSecondaryPhone));
                copy.setSecondaryPhone(copySecondaryPhone);
            } else {
                copy.secondaryPhone = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new ContactBase();
    }

}
